"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const kms = require("@aws-cdk/aws-kms");
const lambda = require("@aws-cdk/aws-lambda");
const core_1 = require("@aws-cdk/core");
const lib_1 = require("../lib");
/*
 * Stack verification steps
 * * Sign up to the created user pool using an email address as the username, and password.
 * * Verify the CustomEmailSender lambda was called via logged message in CloudWatch.
 */
const app = new core_1.App();
const stack = new core_1.Stack(app, 'integ-user-pool-custom-sender');
const customSenderLambda = new lambda.Function(stack, 'emailLambda', {
    runtime: lambda.Runtime.NODEJS_14_X,
    handler: 'index.handler',
    code: lambda.Code.fromInline('exports.handler = function(event, ctx, cb) { console.log("Mocked custom email send");return cb(null, "success"); }'),
});
const userpool = new lib_1.UserPool(stack, 'pool', {
    autoVerify: {
        email: true,
    },
    selfSignUpEnabled: true,
    signInAliases: {
        email: true,
    },
    customSenderKmsKey: new kms.Key(stack, 'key'),
    lambdaTriggers: {
        customEmailSender: customSenderLambda,
    },
    removalPolicy: core_1.RemovalPolicy.DESTROY,
});
const client = userpool.addClient('client', {
    authFlows: {
        userSrp: true,
    },
});
new core_1.CfnOutput(stack, 'UserPoolId', {
    value: userpool.userPoolId,
});
new core_1.CfnOutput(stack, 'ClientId', {
    value: client.userPoolClientId,
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW50ZWcudXNlci1wb29sLWN1c3RvbS1zZW5kZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbnRlZy51c2VyLXBvb2wtY3VzdG9tLXNlbmRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLHdDQUF3QztBQUN4Qyw4Q0FBOEM7QUFDOUMsd0NBQXFFO0FBQ3JFLGdDQUFrQztBQUVsQzs7OztHQUlHO0FBQ0gsTUFBTSxHQUFHLEdBQUcsSUFBSSxVQUFHLEVBQUUsQ0FBQztBQUN0QixNQUFNLEtBQUssR0FBRyxJQUFJLFlBQUssQ0FBQyxHQUFHLEVBQUUsK0JBQStCLENBQUMsQ0FBQztBQUU5RCxNQUFNLGtCQUFrQixHQUFHLElBQUksTUFBTSxDQUFDLFFBQVEsQ0FBQyxLQUFLLEVBQUUsYUFBYSxFQUFFO0lBQ25FLE9BQU8sRUFBRSxNQUFNLENBQUMsT0FBTyxDQUFDLFdBQVc7SUFDbkMsT0FBTyxFQUFFLGVBQWU7SUFDeEIsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLG9IQUFvSCxDQUFDO0NBQ25KLENBQUMsQ0FBQztBQUVILE1BQU0sUUFBUSxHQUFHLElBQUksY0FBUSxDQUFDLEtBQUssRUFBRSxNQUFNLEVBQUU7SUFDM0MsVUFBVSxFQUFFO1FBQ1YsS0FBSyxFQUFFLElBQUk7S0FDWjtJQUNELGlCQUFpQixFQUFFLElBQUk7SUFDdkIsYUFBYSxFQUFFO1FBQ2IsS0FBSyxFQUFFLElBQUk7S0FDWjtJQUNELGtCQUFrQixFQUFFLElBQUksR0FBRyxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsS0FBSyxDQUFDO0lBQzdDLGNBQWMsRUFBRTtRQUNkLGlCQUFpQixFQUFFLGtCQUFrQjtLQUN0QztJQUNELGFBQWEsRUFBRSxvQkFBYSxDQUFDLE9BQU87Q0FDckMsQ0FBQyxDQUFDO0FBRUgsTUFBTSxNQUFNLEdBQUcsUUFBUSxDQUFDLFNBQVMsQ0FBQyxRQUFRLEVBQUU7SUFDMUMsU0FBUyxFQUFFO1FBQ1QsT0FBTyxFQUFFLElBQUk7S0FDZDtDQUNGLENBQUMsQ0FBQztBQUVILElBQUksZ0JBQVMsQ0FBQyxLQUFLLEVBQUUsWUFBWSxFQUFFO0lBQ2pDLEtBQUssRUFBRSxRQUFRLENBQUMsVUFBVTtDQUMzQixDQUFDLENBQUM7QUFFSCxJQUFJLGdCQUFTLENBQUMsS0FBSyxFQUFFLFVBQVUsRUFBRTtJQUMvQixLQUFLLEVBQUUsTUFBTSxDQUFDLGdCQUFnQjtDQUMvQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBrbXMgZnJvbSAnQGF3cy1jZGsvYXdzLWttcyc7XG5pbXBvcnQgKiBhcyBsYW1iZGEgZnJvbSAnQGF3cy1jZGsvYXdzLWxhbWJkYSc7XG5pbXBvcnQgeyBBcHAsIENmbk91dHB1dCwgUmVtb3ZhbFBvbGljeSwgU3RhY2sgfSBmcm9tICdAYXdzLWNkay9jb3JlJztcbmltcG9ydCB7IFVzZXJQb29sIH0gZnJvbSAnLi4vbGliJztcblxuLypcbiAqIFN0YWNrIHZlcmlmaWNhdGlvbiBzdGVwc1xuICogKiBTaWduIHVwIHRvIHRoZSBjcmVhdGVkIHVzZXIgcG9vbCB1c2luZyBhbiBlbWFpbCBhZGRyZXNzIGFzIHRoZSB1c2VybmFtZSwgYW5kIHBhc3N3b3JkLlxuICogKiBWZXJpZnkgdGhlIEN1c3RvbUVtYWlsU2VuZGVyIGxhbWJkYSB3YXMgY2FsbGVkIHZpYSBsb2dnZWQgbWVzc2FnZSBpbiBDbG91ZFdhdGNoLlxuICovXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XG5jb25zdCBzdGFjayA9IG5ldyBTdGFjayhhcHAsICdpbnRlZy11c2VyLXBvb2wtY3VzdG9tLXNlbmRlcicpO1xuXG5jb25zdCBjdXN0b21TZW5kZXJMYW1iZGEgPSBuZXcgbGFtYmRhLkZ1bmN0aW9uKHN0YWNrLCAnZW1haWxMYW1iZGEnLCB7XG4gIHJ1bnRpbWU6IGxhbWJkYS5SdW50aW1lLk5PREVKU18xNF9YLFxuICBoYW5kbGVyOiAnaW5kZXguaGFuZGxlcicsXG4gIGNvZGU6IGxhbWJkYS5Db2RlLmZyb21JbmxpbmUoJ2V4cG9ydHMuaGFuZGxlciA9IGZ1bmN0aW9uKGV2ZW50LCBjdHgsIGNiKSB7IGNvbnNvbGUubG9nKFwiTW9ja2VkIGN1c3RvbSBlbWFpbCBzZW5kXCIpO3JldHVybiBjYihudWxsLCBcInN1Y2Nlc3NcIik7IH0nKSxcbn0pO1xuXG5jb25zdCB1c2VycG9vbCA9IG5ldyBVc2VyUG9vbChzdGFjaywgJ3Bvb2wnLCB7XG4gIGF1dG9WZXJpZnk6IHtcbiAgICBlbWFpbDogdHJ1ZSxcbiAgfSxcbiAgc2VsZlNpZ25VcEVuYWJsZWQ6IHRydWUsXG4gIHNpZ25JbkFsaWFzZXM6IHtcbiAgICBlbWFpbDogdHJ1ZSxcbiAgfSxcbiAgY3VzdG9tU2VuZGVyS21zS2V5OiBuZXcga21zLktleShzdGFjaywgJ2tleScpLFxuICBsYW1iZGFUcmlnZ2Vyczoge1xuICAgIGN1c3RvbUVtYWlsU2VuZGVyOiBjdXN0b21TZW5kZXJMYW1iZGEsXG4gIH0sXG4gIHJlbW92YWxQb2xpY3k6IFJlbW92YWxQb2xpY3kuREVTVFJPWSxcbn0pO1xuXG5jb25zdCBjbGllbnQgPSB1c2VycG9vbC5hZGRDbGllbnQoJ2NsaWVudCcsIHtcbiAgYXV0aEZsb3dzOiB7XG4gICAgdXNlclNycDogdHJ1ZSxcbiAgfSxcbn0pO1xuXG5uZXcgQ2ZuT3V0cHV0KHN0YWNrLCAnVXNlclBvb2xJZCcsIHtcbiAgdmFsdWU6IHVzZXJwb29sLnVzZXJQb29sSWQsXG59KTtcblxubmV3IENmbk91dHB1dChzdGFjaywgJ0NsaWVudElkJywge1xuICB2YWx1ZTogY2xpZW50LnVzZXJQb29sQ2xpZW50SWQsXG59KTtcbiJdfQ==